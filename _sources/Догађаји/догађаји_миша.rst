
29.3. Догађаји миша
===================

Као и тастатура и миш има дугмад и за њих постоје догађаји притиска и
догађаји отпуштања дугмета: ``pg.MOUSEBUTTONDOWN`` и
``pg.MOUSEBUTTONUP``. Реаговање на њих је веома слично као што је
реаговање на догађаје тастатуре ``pg.KEYDOWN`` и ``pg.KEYUP``. Миш
често има три дугмета (лево, средње и десно) и клик на било које од
њих генерише поменута два догађаја. Ови догађаји садрже следећа
поља.

- Поље ``dogadjaj.button`` може да садржи број од 1 до 5 и означава
  које дугме миша је притиснуто (1 - лево, 2 - средње, 3 - десно, 4 -
  скрол на горе, 5 - скрол на доле).
- Поље ``dogadjaj.pos`` садржи уређени пар координата позиције миша на којој
  је дугме притиснуто.

Поред догађаја притиска на дугме, приликом померања миша генерише се
догађај ``pg.MOUSEMOTION``. Заправо, током померања миша генерише се
више оваквих догађаја (сваки од њих описује неко мало померање миша у
неком веома кратком временском интервалу, тако да сваки такав догађај
обично описује померање тек за неколико пиксела). Ови догађаји садрже
следећа поља.

- Позицију миша након померања можемо одредити помоћу
  ``dogadjaj.pos``, које садржи уређени пар координата на којима се
  миш нашао након померања.
- Поље ``dogadjaj.rel`` садржи уређени пар који описује колико се
  током тог једног померања миша позиција променила (тај пар
  представља разлику између крајње и почетне координате :math:`x` и крајње и
  почетне :math:`y` координате).
- Поље ``dogadjaj.buttons`` садржи трочлану листу логичких вредности
  које за свако од три дугмета миша одређују да ли је било притиснуто
  током померања миша.

Дан и ноћ
'''''''''

.. questionnote::

   Напиши програм који приказује небо и то ако је дан, плаво са жутим
   сунцем у горњем левом углу, а ако је ноћ, онда црно са 100 белих
   звездица насумично распоређених по њему. Када се клинке мишем било
   где на прозор, дан се мења у ноћ, а ноћ у дан.

- Стање сцене биће одређено логичком променљивом ``dan`` која ће
  имати вредност ``True`` ако и само ако је тренутно дан.
- У функцији за цртање вршићемо гранање на основу вредности те
  променљиве и цртамо плаво небо са сунцем тј. црно небо са звездицама
  (њих цртамо у петљи и положај им одређујемо насумично).
- У функцији обраде догађаја проверавамо да ли је у питању догађај
  притиска дугмета миша ``pg.MOUSEBUTTONDOWN`` и ако јесте, мењамо
  вредност логичке променљиве ``dan`` (гранањем, или још лакше помоћу
  оператора негације ``not``).
   
.. activecode:: dan_noc
   :nocodelens:
   :modaloutput: 
   :enablecopy:
   :playtask:
   :includexsrc: _includes/dan_noc.py

   dan = True   # da li je dan ili noć
    
   def crtaj():
       if dan:  # ako je dan
           prozor.fill(pg.Color("skyblue"))                          # plavo nebo
           pg.draw.circle(prozor, pg.Color("yellow"), (50, 50), 40)  # sunce
       else:    # ako je noć
           prozor.fill(pg.Color("black"))                            # crno nebo
           broj_zvezda = 100                                         # zvezde
           for i in range(???):
               x = random.randint(0, sirina)
               y = random.randint(???)
               pg.draw.circle(prozor, pg.Color("white"), ???, 2)    
    
   def obradi_dogadjaj(dogadjaj):
       global dan
       if dogadjaj.type == ???: # pritisak dugmeta miša
           dan = ???            #   ako je bio dan, sada više nije i obratno
           return True          #   treba ponovo crtati
       return ???               # ne treba ponovo crtati

       
   
Боја позадине мишем
'''''''''''''''''''
                 
.. questionnote::

   Напиши програм који мења боју позадине екрана у зависности од
   положаја миша. Што се миш налази ближе десној ивици прозора, то је
   више црвене боје, а што је ближе доњој ивици прозора, то је више
   плаве боје. Зелена компонента је стално на нули.

- Глобално стање сцене биће одређено променљивама ``crvena`` и
  ``plava`` које имају вредности између 0 и 255 и одређују количину
  црвене тј. плаве светлости у тренутној боји позадине.
- Функција ``crtaj`` ће бити веома једноставна - бојиће позадину
  прозора на основу вредности променљивих ``crvena`` и ``plava``.

- У овом задатку не реагујемо на клик миша, него на свако померање
  миша (догађај ``pg.MOUSEMOTION``). Из позиције на којој се миш
  налази тј. поља ``dogadjaj.pos`` издвајамо координате ``x`` и ``y``
  и на основу њих одређујемо боју тј. ажурирамо вредности глобалних
  променљивих ``crvena`` и ``plava``. Нијансу цврене боје одређујемо
  коришћењем линеарне функције која ће бити таква да :math:`x` координату нула
  пресликава у интензитет боје нула, а :math:`x` координату једнаку ширини
  екрана пресликава у 255. Ту функцију је лако конструисати -
  координату ``x`` делимо ширином екрана и множимо са 255 (наравно,
  заокружимо резултат на цео број). Потпуно аналогно, на основу y
  координате одређујемо нијансу плаве боје.

На основу претходне дискусије допуни наредни програм.

.. activecode:: boja_misem
   :nocodelens:
   :modaloutput: 
   :enablecopy:
   :playtask:
   :includexsrc: _includes/boja_misem.py
   
   crvena = 0  # količina crvene boje
   plava = 0   # količina plave boje
    
   def crtanje():
       prozor.fill((???, ???, ???))      # bojimo prozor
    
   def obradi_dogadjaj(dogadjaj):
       global crvena, plava, treba_crtati
    
       if dogadjaj.type == ???:              # dogadjaj pomeranja miša
           (x, y) = dogadjaj.pos             #   koordinate na kojima se miš trenutno nalazi
           crvena = round(x / sirina * 255)  #   količina crvene boje zavisi od x
           plava  = ???                      #   količina plave boje zavisi od y
           return True                       #   treba crtati ponovo
    
       return False                          # ne treba crtati ponovo

Чекић
'''''

.. questionnote::

   Направи програм у коме мишем помераш чекић по екрану. Чекић је у
   подигнутом положају, а када притисне дугме миша чекић се
   спусти. Можеш употребити слике ``CekicGore.png`` и
   ``CekicDole.png``.

.. image:: ../../_images/CekicGore.png
.. image:: ../../_images/CekicDole.png
   

- Стање сцене биће одређено положајем центра чекића који ће бити
  одређен вредностима променљивих ``mis_x`` и ``mis_y``. Слике ћемо
  учитати у уређени пар ``mis_slika`` (прво чекић горе, затим чекић
  доле), а слику коју тренутно треба приказати ћемо одређивати на
  основу вредности променљиве ``i_slika`` (њена вредност 0 ће
  указивати на то да треба нацртати чекић горе, а 1 да треба нацртати
  чекић доле).
- У функцији ``crtaj`` бојићемо позадину екрана у светло-плаво (да би
  се обрисала претходна слика) и приказиваћемо одговарајућу слику
  (елемент пара ``mis_slika`` на позицији ``i_slika``) тако да јој се
  центар налази на позицији ``(mis_x, mis_y)`` (подсетимо се, треба
  одредити положај горњег-левог угла слике и то се ради тако што се од
  центра слике одузме пола њене ширине тј. висине).
- У функцији за обраду догађаја ћемо реаговати на притисак тастера
  миша (догађај ``pg.MOUSEBUTTONDOWN``) и тада ћемо променљивој
  ``i_slika`` додељивати вредност 1, како би се приказивао спуштен
  чекић, на отпуштање тастера миша (догађај ``pg.MOUSEBUTTONUP``) и
  тада ћемо променљивој ``i_slika`` додељивати вредност 0, како би се
  приказивао подигнут чекић и на померање миша (догађај
  ``pg.MOUSEMOTION``) и тада ћемо променљиве ``mis_x`` и ``mis_y``
  ажурирати на основу очитаног положаја миша (вредности
  ``dogadjaj.pos``).

Покушај да на основу претходне дискусије самостално напишеш програм, а
ако видиш да ти је помоћ потребна, затражи је.
           
.. activecode:: cekic
   :nocodelens:
   :modaloutput: 
   :enablecopy:
   :playtask:
   :help:
   :includexsrc: _includes/cekic.py

   mis_slika = (pg.image.load("CekicGore.png"), pg.image.load("CekicDole.png"))
   i_slika = 0
   (mis_x, mis_y) = (sirina // 2, visina // 2)
   pg.mouse.set_pos((mis_x, mis_y))
   pg.mouse.set_visible(False)
    
   def crtaj():
       prozor.fill(pg.Color("skyblue")) # bojimo prozor u nebo-plavo
       # crtamo sliku tako da je mis na sredini slike
       slika = mis_slika[i_slika]
       slika_sirina = ???
       slika_visina = ???.get_height()
       gore_levo = ???
       prozor.blit(slika, gore_levo)
    
   def obradi_dogadjaj(dogadjaj):
       global mis_x, mis_y, i_slika
       if dogadjaj.type == pg.MOUSEBUTTONDOWN:
           ???
           return True
       elif dogadjaj.type == pg.MOUSEBUTTONUP:
           ???
           return True
       elif dogadjaj.type == pg.MOUSEMOTION:
           ???
           return True
       return False
                    
