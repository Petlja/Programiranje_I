Наредба ``if``
=============

Подсетимо се синтаксе наредбе ``if``:

.. activecode:: naredba_if
   :passivecode: true
   
   if uslove:
      naredba1()
      naredba2()
      ...

Сигурни смо да си већ прочитао / прочитала све што има везе са овом наредбом. Подсећамо те да је било речи о непотпуном и потпуном облику 
наредбе ``if``. Свакако можеш се подсети детаља `овде <https://petlja.org/biblioteka/r/lekcije/prirucnik-python-gim/karel-cas2#id9>`__.

Покупи лоптицу ако је има
'''''''''''''''''''''''''
.. level:: 1

.. questionnote::

   Наредни лавиринт је зачаран. Сваки пут када се робот покрене,
   лоптице на три поља испред њега се наместе другачије. Напиши
   програм којим робот купи све лоптице.

Робот треба три пута да се помери напред и да са сваког поља на које
дође покупи лоптицу (ако на пољу има лоптица). Међутим, пре него што
покупи лоптицу он мора да провери да ли на том пољу уопште постоји
лоптица. Провера услова у програмском језику Python (а и у многим
другим програмским језицима) врши се наредбом ``if``, што на енглеском
језику значи ако.

.. activecode:: Карел_покупи_лоптицу_ако_је_има_if
   :passivecode: true

   if ima_loptica_na_polju():
       uzmi()

Подсетимо се, помоћу услова ``ima_loptica_na_polju`` испитујемо да ли
на пољу има лоптица. Претходним кодом смо роботу рекли "Ако на пољу на
ком стојиш има лоптица онда узми лоптицу", чиме постижемо да Карел
провери да ли на пољу има лоптица и ако има да узме једну лоптицу.
Приметимо да је, слично као и код петљи, након услова наведена
двотачка, а да је наредба која се извршава ако је услов испуњен мало
увучена. То је обавезно и ако то не испоштујеш добићеш поруку о
грешци, веома сличну као и код петљи.

У зависности од тога да ли је услов који проверавамо испуњен, ток
програма се *грана*, па се наредба ``if`` назива и наредба *гранања*.
Гранањем и наредбом ``if`` ћемо се много детаљније бавити у поглављу
`Гранање <Grananje.html>`_.

Дакле, да бисмо решили задатак, комбиноваћемо померање робота и
наредбу гранања којом ћемо проверавати да ли на пољу постоји лоптица,
пре него што је робот покупи.
   
.. karel:: Карел_покупи_лоптицу_ако_је_има
   :blockly:

   {
      setup: function() {
	   var world = new World(4, 1);
           world.setRobotStartAvenue(1);
           world.setRobotStartStreet(1);
           world.setRobotStartDirection("E");
	   for (var k = 2; k <= 4; k++)
	      if (Math.random() > 0.5) 
                  world.putBall(k, 1);
           var robot = new Robot();
	   var code = ["from karel import *",
					"napred();             # idi napred",
					"if ima_loptica_na_polju():  # ako je na polju loptica:",
					"    uzmi()       #    uzmi lopticu",
					"",
					"napred();             # idi napred",
					"if ima_loptica_na_polju():  # ako je na polju loptica:",
					"    uzmi()       #    uzmi lopticu",
					"",
					"# dopuni program", "???"]
	   return {world: world, robot: robot, code: code};
      },

      isSuccess: function(robot, world) {
           return world.getBalls(2, 1) == 0 &&
	          world.getBalls(3, 1) == 0 &&
	          world.getBalls(4, 1) == 0;
      }
   }

Битно је да знаш да за вежбање задатака увек можеш да користиш нашу Збирку малих задатака у којима се налазе и
задаци у вези са `гранањем <https://petlja.org/biblioteka/r/lekcije/python-zbirka-malih-zadataka/grananje#id1>`__. 
Такође, овде има и задатака из других области.

.. infonote:: Погледај наредну видео лекцију.      
    

.. ytpopup:: Nyun0pML3-M
      :width: 735
      :height: 415
      :align: center