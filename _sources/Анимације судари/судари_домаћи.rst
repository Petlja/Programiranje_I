31.2. Домаћи - судари објеката на екрану
========================================

.. questionnote::

   Напиши програм који приказује црвену и плаву лоптицу које се крећу
   по екрану, одбијају од ивица и одбијају међусобно (једноставности
   ради претпостави да приликом судара две лоптице једноставно размене
   векторе кретања).

Поново независно вршимо анимацију два различита објекта. Кључна новина
је то што се објекти могу међусобно сударати. Два круга се сударају
(пресецају) ако и само ако је растојање њихових центара мање од збира
њихових полупречника. Растојање рачунамо на уобичајени начин,
Питагорином теоремом. Ако се лоптице сударају, размењујемо им помераје
по x и помераје по y оси (векторе брзине).
   
.. activecode:: dve_loptice
   :nocodelens:
   :modaloutput: 
   :enablecopy:
   :playtask:
   :includexsrc: _includes/dve_loptice.py

   r = 20
   (x1, y1) = (r, r)
   (dx1, dy1) = (2, 3)
   (x2, y2) = (sirina - r, visina - r)
   (dx2, dy2) = (-3, -2)
    
   def crtaj():
       prozor.fill(pg.Color("white"))
       pg.draw.circle(prozor, pg.Color("red"), (x1, y1), r)
       pg.draw.circle(prozor, pg.Color("blue"), (x2, y2), r)
    
   # rastojanje između centara loptica
   def rastojanje():
       return math.sqrt((x1-x2)**2 + (y1-y2)**2)
    
   # provera da li se dve loptice sudaraju
   def sudar():
       return rastojanje() <= 2*r
    
   def novi_frejm():
       global x1, y1, x2, y2, dx1, dy1, dx2, dy2
    
       # pomeramo prvu lopticu i proveravamo sudar sa ivicama prozora
       x1 += dx1
       y1 += dy1
       if x1 - r < 0 or x1 + r > sirina:
           dx1 = -dx1
       if y1 - r < 0 or y1 + r > visina:
           dy1 = -dy1
    
       # pomeramo drugu lopticu i proveravamo sudar sa ivicama prozora
       ???
    
       # ispitujemo sudar dve loptice
       if sudar():
           (dx1, dy1, dx2, dy2) = (dx2, dy2, dx1, dy1)

       crtaj()
       
